echo "enter args: "
read args

if test -n $1 ;then
    path="$PWD/$1/"
else 
    path=$(echo "$PWD/")
fi
mkdir -p "$path.vscode"
echo '{
	"version": "0.2.0",
	"configurations": [
		{
			"name": "cc build and debug active file",
			"type": "cppdbg",
			"request": "launch",
			"program": "${fileDirname}/${fileBasenameNoExtension}",
			"args": [$args],
			"stopAtEntry": false,
			"cwd": "${workspaceFolder}",
			"environment": [],
			"externalConsole": false,
			"MIMode": "gdb",
			"setupCommands": [
				{
					"description": "Enable pretty-printing for gdb",
					"text": "-enable-pretty-printing",
					"ignoreFailures": true
				}
			],
			"preLaunchTask":  "[CC] Compile Program",
			"miDebuggerPath": "/usr/bin/gdb"
		}
	]
}' > "$path.vscode/launch.json"

echo '{
	"tasks": [
		{
			"type": "cppbuild",
			"label": "[CC]  Compile Program",
			"command": "/usr/bin/cc",
			"args": [
				"-fdiagnostics-color=always",
				"-g",
				"${file}",
				"-o",
				"${fileDirname}/${fileBasenameNoExtension}"
			],
			"options": {
				"cwd": "${fileDirname}"
			},
			"problemMatcher": ["$gcc"],
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"detail": "Task generated by Debugger."
		}
	],
	"version": "2.0.0"
}' > "$path.vscode/tasks.json"